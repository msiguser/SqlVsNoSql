1.	Bases Relacionales (SQL)
1.1.	Definición
Una base de datos relacional es un conjunto de tablas que contienen información organizada en categorías. Cada tabla contiene una o más categoría de datos en columnas. Cada fila contiene una instancia única de datos para las categorías definido por las columnas. Los usuarios pueden acceder o volver a armar los datos en diferentes formas sin tener que reorganizar las tablas de la base de datos.
1.2.	Ventajas
•	Herramientas  que evitan la duplicidad de registros
•	Garantiza integridad referencial
•	Favorece la normalización de la información
•	Atomicidad de las operaciones
1.3.	Desventajas
•	Atomicidad de operaciones afecta el desempeño
•	Escalabilidad. Usuarios pueden escalar la base de datos de forma vertical. Se necesita base de datos distribuidas
•	Complejidad. Deficiencias con datos no relacionales, tales como gráficos, multimedia, etc.
1.4.	Ejemplos
•	MySQL
•	PostgreSQL
•	Oracle
•	DB2
•	Microsoft SQL Server
2.	Bases No Relacionales (No SQL)
2.1.	Definicion
Difieren del modelo relacional tradicional, destacando la capacidad de no usar SQL como lenjuage predeterminado de consultas. Su almacenamiento de data no requeiren estructuras fijas como las tablas, ya que normalmente no soportan operaciones como JOIN y mucho menos garantizan atomicidad.
2.2.	Ventajas
• Soportan estructuras distribuidas.
• Escalabilidad 
• Optimización, es decir, se pueden ejecutar en máquinas con cantidad de recursos minimos.
• Abiertas y Flexibles
• Permiten adaptarse a necesidades de proyectos complejos.
• Se pueden realizar cambios en los esquemas sin necesaidad de detener la bases de datos.
• Optimización de queryz para grandes cantidades de datos.

2.3.	Desventajas
• Consistencia eventual (Tomicidad de las instrucciones).
• Problemas de compatibilidad entre instrucciones SQL. 
• Soporte más complejo
• Falta de estandarización. 
• Carencia de soporte multiplataforma. 

2.4.	Ejemplos
• Cassandra
• CuchDB
• db4o
• BaseX
• Dynamo
• Redis
• CouchDB
• MongoDB
• Riak
• Reality
• OpenQM

Cuándo usar NoSQL
- Cuando las estructuras de datos son variables. 
- Para Analizar grandes cantidades de datos en modo lectura. 
- Tiendas online con motores de inteligencia. 

Quienés usan NoSQL
Google, Amazon, Twitter y Facebook

3.	Conclusión

Luego de revisar las diferencias, ventajas y desventajas de las base de datos SQL y No SQL, podemos indicar cuando usar cada uno de los tipos de base de datos:

• SQL
  Manejo de información relacional
  Atomicidad de las operaciones de datos
  Manejo consistente de los datos
• No SQL
  Manejo de información no relacional como grafos de objetos, gráficos, multimedia, etc,
  La escalabilidad no puede realizarce con equipos costosos
  Analisis de grandes volumenes de información


